# Hazmat v 0.1.1

Hazmat is a reader for [Radiation](https://github.com/sts10/radiation) blogs

### What Hazmat Does

Given that the HTML product of most Radiation blogs follow the same pattern, I thought I'd make a simple web scraper that could pull blog posts from a set of Radiation blogs and order them in reverse chronological order for the reader. 

VERY MUCH IN DEVELOPMENT!

**NOTE**: Hazmat works on Totally Nuclear boxes, but probably not on other tilde club boxes. This is because ~erik did something on the totally nuclear system to allow a Ruby gem called nokogiri to be successfully installed on totally nuclear boxes. 

### How To Use v 0.1.X

In your totally nuclear box...

1. Clone this directory to your totally nuclear box by running `git clone https://github.com/sts10/hazmat.git`.
2. `cd` into directory. 
3. Run `gem install nokogiri -- --use-system-libraries`. If that gives you an error, try `gem install nokogiri`
4. Now run `ruby bin/runner.rb`

You'll be asked to add a hazmat function to your bash_profile. If you've used Radiation you're porbably familar with this. It makes running Hazmat easier-- you'll no longer have to run `cd ~/hazmat; ruby bin/runner.rb` to run Hazmat. Strongly recommend you say `y` when asked. 

Once your newspaper is printed you'll be asked to visit `http://totallynuclear.club/~your_username/hazmat/my_hazmat_newspaper.html` to see you Hazmat "newspaper". You'll also be given the option of viewing the same newspaper in a console browser called Lynx.

The blogs you follow are configurable in `following.rb`. To open/edit this file in vim, run `vim ~/hazmat/following.rb`. (Future versions of Hazmat will hopefully allow users to run `hazmat following` or something similar from anywhere in their box to allow users to edit their following list. HOWEVER this functionality has been a little wonky in v 0.1.1. I'm working on it. 

### To Do
- More testing on converting relative paths to absolute paths (especially for images)
- Better error handling when you enter a URL that is not Radiation approved

### Bigger Things to Add
- The CLI component. One choice to add a new following-- check right then if the URL is hazmat compliant
- Clean up  file structure
- Consider adding a default style sheet (does Radiation have this? I honestly forget...)
- Ability to change how many lines the posts are displayed before a simple "read more" link to the permalink to the full post.
- Make scraper super robust / error handling to account for most slight modifications Radiation users may have made to their template. 
- Write a test to quickly and easily find out if a follow request blog is Hazmat compliant
- mention notifications! 

### CHANGELOG

#### What's new in v 0.1.1

Checks for a hazmat function in the user's bash_profile. Also accepts ARGV[0]'s of following and help, however this functionality has proved wonky in tests on my actual TNC box. :( See `bin/runner.rb`. 

#### What's new in v 0.1.0

Moves the produced newspaper to `~/public_html/hazmat/my_hazmat_newspaper.html`. But also gives option to view the same newspaper with Lynx.

#### What's new in v 0.0.7

Posts have a set max-height, after which point they become scrollable. I think this makes reading many posts more manageable. 

Also cleaned up the printed page's CSS and HTML. Also added some JavaScript allowing users to navigate posts with the keyboard.

#### What's new in v 0.0.6 

Now following 7 Radiation with minimal problems. Put in fixes for youtube iframes and improved the handling of images with relative sources. 

Still pretty fragile! Haven't tried putting http://google.com into the following yet!


### Notes on Alternative Methods to Find and Replace Relative Paths to Absolute Paths 

- Idea 1: use 'uri' and this method from SO to find and replace the relative paths with absolute paths: http://stackoverflow.com/questions/25525364/ruby-opening-absolute-url-from-relative

- Idea 2: Use the mechanize gem to systematically find all the relative paths. I am not sure if, in this case, mechanize will replace nokogiri as our scraper, or the two will work hand-in-hand somehow (we need nokogiri's CSS targeting): http://blog.biasedwalk.com/2014/03/making-relative-links-absolute-with.html

- use uri for joining URLs probably: http://stackoverflow.com/questions/4861517/getting-the-absolute-url-when-extracting-links 
